/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab2;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {


        return true;
    }
    public static void main(String[] args){
        System.out.println("Dice roll " + roll(2));
        int[] arrayOfNumbers = {2,4,3,8,7,1,2};
//        int[] arrayOfNumbers = {1,2,3};
        System.out.println(containsDuplicates(arrayOfNumbers));
        System.out.println("Average= "+ calculatingAverage(arrayOfNumbers));
        // Daily average temperatures for Seattle, October 1-28 2017
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println("Array with the lowest average:");
        System.out.println(Arrays.toString(arrayOfArrays(weeklyMonthTemperatures)));
        System.out.println(analyzingWeatherData(weeklyMonthTemperatures));

        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");


    }
    public static ArrayList roll(int n) {
        ArrayList<Integer> diceArr = new ArrayList<>();
        int min = 1;
        int max = 6;
        for (int i = 0; i < n; i++) {
            int random = (int) (Math.random() * (max - min)) + 1;
            diceArr.add(random);
        }
        return diceArr;
    }

    public static boolean containsDuplicates(int[] arrayToBeChecked) {

        for (int i = 0; i < arrayToBeChecked.length; i++) {
            for (int j = 0; j < arrayToBeChecked.length; j++) {
                if (arrayToBeChecked[i]==(arrayToBeChecked[j]) && i != j) {
                    return true;
                }
            }
        }
        return false;


    }

    public static double calculatingAverage(int[] arrayOfNumbers) {
        double total = 0;

        for(int i=0; i<arrayOfNumbers.length; i++){
            total = total + arrayOfNumbers[i];
        }

        double average = total / arrayOfNumbers.length;
        return average;

    }

    public static int[] arrayOfArrays(int[][] array) {
        double total = 0;
        double average = 0;
        double lowestAverage = 0;
        int index = 0;

        for (int i = 0; i < array.length; i++) {
            for (int j = 0; j < array[i].length; j++) {
                total += array[i][j];
                average = total / array[i].length;
                if (i == 0) {
                    lowestAverage = average;
                }
            }
            if (average < lowestAverage) {
                lowestAverage = average;
                index = i;
            }
            total = 0;
            average = 0;
        }
        return array[index];
    }


    public static String analyzingWeatherData (int[][] weeklyMonthTemperatures){
      int minTemp=80;
      int maxTemp=0;
      for(int i=0;i<weeklyMonthTemperatures.length;i++){
          for(int j=0;j<weeklyMonthTemperatures[i].length;j++){
              if(weeklyMonthTemperatures[i][j]<minTemp){
                  minTemp=weeklyMonthTemperatures[i][j];
              }
              if(weeklyMonthTemperatures[i][j]>maxTemp){
                    maxTemp=weeklyMonthTemperatures[i][j];
                }
          }
      }
        System.out.println("High: "+ maxTemp);
        System.out.println("Low: "+ minTemp);

        Set<Integer> temperatures= new HashSet<>();

        for(int i=0;i< weeklyMonthTemperatures.length;i++){
            for (int j=0;j< weeklyMonthTemperatures[i].length;j++){

                temperatures.add(weeklyMonthTemperatures[i][j]);

            }
    }
//        Set <ArrayList> temperaturesArray= new HashSet<>();
        String notIncludedTemp="";
       for (int i=minTemp;i<=maxTemp;i++){
           if (!temperatures.contains(i)){
               notIncludedTemp+="Never saw temperature:"+i+"\n";
           }
      }
       return notIncludedTemp;
    }
    public static String tally(List<String> votesList ) {
    Set <String> votesOptions=new HashSet<>(votesList);
//        System.out.println(votesOptions);
        int votesCounter=0;
        int mostVotes=0;
        String name="";
        for (String vote : votesOptions) {
            for (String s : votesList)
                if (s.equals(vote))
                    votesCounter++;
            if (votesCounter > mostVotes) {
                mostVotes = votesCounter;
                name = vote;
            }
            votesCounter = 0;
        }
        return name;
    }
}



